import asyncio
import os
from aiogram import Bot, Dispatcher, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from config import TOKEN

bot = Bot(token=TOKEN)
dp = Dispatcher()

SAVE_DIR = "jpg"  # –ü–∞–ø–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–æ—Ç–æ

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ
@dp.message(F.photo)
async def react_photo(message: Message):
    try:
        file_id = message.photo[-1].file_id  # –ü–æ–ª—É—á–∞–µ–º ID —Å–∞–º–æ–≥–æ –±–æ–ª—å—à–æ–≥–æ —Ñ–æ—Ç–æ
        file = await bot.get_file(file_id)  # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—É—Ç—å —Ñ–∞–π–ª–∞ —É Telegram
        file_path = file.file_path

        os.makedirs(SAVE_DIR, exist_ok=True)  # –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        save_path = os.path.join(SAVE_DIR, f"{file_id}.jpg")

        await bot.download_file(file_path, save_path)  # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–æ—Ç–æ

        # –£–∫–æ—Ä–∞—á–∏–≤–∞–µ–º callback_data (–±–µ—Ä—ë–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 10 —Å–∏–º–≤–æ–ª–æ–≤ ID)
        short_id = file_id[:10]

        # –°–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–£–¥–∞–ª–∏—Ç—å" –∏ "–û—Å—Ç–∞–≤–∏—Ç—å"
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å", callback_data=f"del_{short_id}")],
            [InlineKeyboardButton(text="‚úÖ –û—Å—Ç–∞–≤–∏—Ç—å", callback_data=f"keep_{short_id}")]
        ])

        await message.answer(f"üì∏ –§–æ—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!\n–£–¥–∞–ª–∏—Ç—å?", reply_markup=keyboard)

    except Exception as e:
        await message.answer(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–æ—Ç–æ: {e}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ
@dp.callback_query(F.data.startswith("del_"))
async def delete_photo_callback(query: CallbackQuery):
    short_id = query.data.split("_")[1]  # –î–æ—Å—Ç–∞—ë–º –∫–æ—Ä–æ—Ç–∫–∏–π ID
    file_path = None

    # –ü–æ–∏—Å–∫ –ø–æ–ª–Ω–æ–≥–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ –ø–æ —É–∫–æ—Ä–æ—á–µ–Ω–Ω–æ–º—É ID
    for filename in os.listdir(SAVE_DIR):
        if filename.startswith(short_id):
            file_path = os.path.join(SAVE_DIR, filename)
            break

    if file_path and os.path.exists(file_path):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞–π–¥–µ–Ω –ª–∏ —Ñ–∞–π–ª
        os.remove(file_path)  # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª
        await query.message.edit_text(f"‚úÖ –§–æ—Ç–æ —É–¥–∞–ª–µ–Ω–æ.")
    else:
        await query.message.edit_text(f"‚ö†Ô∏è –§–æ—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ
@dp.callback_query(F.data.startswith("keep_"))
async def keep_photo_callback(query: CallbackQuery):
    await query.message.edit_text(f"‚úÖ –§–æ—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())
